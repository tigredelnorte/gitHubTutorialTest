import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class App {

	public static void main(String[] args) {

		List<String> animals = new ArrayList();
		animals.add("giraffe");
		animals.add("ant");
		animals.add("mangoose");
		animals.add("bear");
		animals.add("frog");
		animals.add("camel");
		animals.add("snake");

		Collections.sort(animals);

		System.out.println(animals);

		for (String animal : animals) {
			System.out.println(animal);
		}

		Collections.sort(animals, new StringLengthComparator());
		System.out.println("------------String.length---------------------------");
		for (String animal : animals) {
			System.out.println(animal);
		}
		Collections.sort(animals, new AlphabeticalComparator());
		System.out.println("---------------ALPHABETICAL-----------------------");
		for (String animal : animals) {
			System.out.println(animal);
		}
		Collections.sort(animals, new ReverseAlphabeticalComparator());
		System.out.println("---------------REVERSE-ALPHABETICAL-----------------------");
		for (String animal : animals) {
			System.out.println(animal);
		}
	}
}

class StringLengthComparator implements Comparator<String> {

	@Override
	public int compare(String o1, String o2) {
		if (o1.length() > o2.length())
			return 1;
		else if (o1.length() < o2.length())
			return -1;
		else
			return 0;
	}

}

class AlphabeticalComparator implements Comparator<String> {

	@Override
	public int compare(String o1, String o2) {
		return o1.compareTo(o2);
	}

}
class ReverseAlphabeticalComparator implements Comparator<String> {

	@Override
	public int compare(String o1, String o2) {
		return -o1.compareTo(o2);
	}

}
