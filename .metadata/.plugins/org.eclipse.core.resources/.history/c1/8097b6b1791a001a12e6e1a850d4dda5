package test;

class Runner implements Runnable{

	int delay=1000;
	private static int count = 0;
	
	
	public int getDelay() {
		return delay;
	}


	public static void addCount() {
		Runner.count ++;
	}


	public void setDelay(int delay) {
		this.delay = delay;
	}


	public int getCount() {
		return count;
	}


	public Runner(int delay) {
		super();
		this.delay = delay;
	}


	public Runner() {
		super();
	}


	@Override
	public void run() {
		addCount();
		double start = System.currentTimeMillis();
		System.out.println("test"+ getCount()+" started");
		
		try {
			Thread.sleep(delay);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		double end = System.currentTimeMillis();
		System.out.println("test"+ getCount()+" finished");
		System.out.println("Test "+ getCount()+" duration: "+(end-start));
	}
	
}

public class AppTest {
	public static void main(String[] args) {

		Thread t1 = new Thread(new Runner());
		t1.start();
		Thread t2 = new Thread(new Runner(1500));
		t2.start();
	}
}
